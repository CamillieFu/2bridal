{"ast":null,"code":"var initDate_calc = function initDate_calc() {\n  var date_present = document.getElementById(\"start_date\");\n\n  if (date_present) {\n    var dates_start = document.getElementById(\"start_date\");\n    var dates_end = document.getElementById(\"end_date\"); // Gets and sets the dates in a variable\n\n    var price_regex = document.getElementById(\"day_price\").innerText.match(/\\d+/g); // Gets the inner text of day_price and matches to get an array of the dress price\n\n    dates_start.addEventListener(\"input\", function (event) {\n      var end_d_value = document.getElementById(\"end_date\").value;\n      var start_date_value = event.target.value;\n      var mili_first = Date.parse(start_date_value);\n      var mili_second = Date.parse(end_d_value); // conversion to Date and milliseconds\n\n      var days = Math.round((mili_second - mili_first) / (1000 * 60 * 60 * 24)); // difference_ms = mili_second - mili_first / one_day=1000*60*60*24\n\n      var new_price_regex = price_regex.join(\"\");\n\n      if (Number.isInteger(days)) {\n        document.getElementById(\"price\").innerText = (days + 1) * new_price_regex;\n        document.getElementById(\"total_price\").value = (days + 1) * new_price_regex;\n      } else {\n        document.getElementById(\"price\").innerText = new_price_regex;\n        document.getElementById(\"total_price\").value = new_price_regex;\n      } // If only one date(ex. start date only) was selected or the same day, it would return and show NaN(Not-A-Number)\n\n    });\n    dates_end.addEventListener(\"input\", function (event) {\n      var start_d_value = document.getElementById(\"start_date\").value;\n      var end_date_value = event.target.value;\n      var mili_first = Date.parse(start_d_value);\n      var mili_second = Date.parse(end_date_value); // conversion to Date and milliseconds\n\n      var days = Math.round((mili_second - mili_first) / (1000 * 60 * 60 * 24)); // difference_ms = mili_second - mili_first / one_day=1000*60*60*24\n\n      var new_price_regex = price_regex.join(\"\");\n\n      if (Number.isInteger(days)) {\n        document.getElementById(\"price\").innerText = (days + 1) * new_price_regex;\n        document.getElementById(\"total_price\").value = (days + 1) * new_price_regex;\n      } else {\n        document.getElementById(\"price\").innerText = new_price_regex;\n        document.getElementById(\"total_price\").value = new_price_regex;\n      } // If only one date(ex. start date only) was selected or the same day, it would return and show NaN(Not-A-Number)\n\n    });\n  }\n};\n\nexport { initDate_calc };","map":{"version":3,"sources":["/Users/cfujisaki/Desktop/two-bridal/app/javascript/plugins/date_calc.js"],"names":["initDate_calc","date_present","document","getElementById","dates_start","dates_end","price_regex","innerText","match","addEventListener","event","end_d_value","value","start_date_value","target","mili_first","Date","parse","mili_second","days","Math","round","new_price_regex","join","Number","isInteger","start_d_value","end_date_value"],"mappings":"AAAA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAArB;;AAEA,MAAIF,YAAJ,EAAkB;AAChB,QAAMG,WAAW,GAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAApB;AACA,QAAME,SAAS,GAAGH,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAlB,CAFgB,CAGhB;;AACA,QAAMG,WAAW,GAAGJ,QAAQ,CACzBC,cADiB,CACF,WADE,EAEjBI,SAFiB,CAEPC,KAFO,CAED,MAFC,CAApB,CAJgB,CAOhB;;AAEAJ,IAAAA,WAAW,CAACK,gBAAZ,CAA6B,OAA7B,EAAsC,UAACC,KAAD,EAAW;AAC/C,UAAIC,WAAW,GAAGT,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,KAAtD;AACA,UAAIC,gBAAgB,GAAGH,KAAK,CAACI,MAAN,CAAaF,KAApC;AACA,UAAIG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,gBAAX,CAAjB;AACA,UAAIK,WAAW,GAAGF,IAAI,CAACC,KAAL,CAAWN,WAAX,CAAlB,CAJ+C,CAK/C;;AACA,UAAIQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,WAAW,GAAGH,UAAf,KAA8B,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAA/C,CAAX,CAAX,CAN+C,CAO/C;;AACA,UAAIO,eAAe,GAAGhB,WAAW,CAACiB,IAAZ,CAAiB,EAAjB,CAAtB;;AACA,UAAIC,MAAM,CAACC,SAAP,CAAiBN,IAAjB,CAAJ,EAA4B;AAC1BjB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCI,SAAjC,GACE,CAACY,IAAI,GAAG,CAAR,IAAaG,eADf;AAEApB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCS,KAAvC,GACE,CAACO,IAAI,GAAG,CAAR,IAAaG,eADf;AAED,OALD,MAKO;AACLpB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCI,SAAjC,GAA6Ce,eAA7C;AACApB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCS,KAAvC,GAA+CU,eAA/C;AACD,OAjB8C,CAkB/C;;AACD,KAnBD;AAoBAjB,IAAAA,SAAS,CAACI,gBAAV,CAA2B,OAA3B,EAAoC,UAACC,KAAD,EAAW;AAC7C,UAAIgB,aAAa,GAAGxB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,KAA1D;AACA,UAAIe,cAAc,GAAGjB,KAAK,CAACI,MAAN,CAAaF,KAAlC;AACA,UAAIG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWS,aAAX,CAAjB;AACA,UAAIR,WAAW,GAAGF,IAAI,CAACC,KAAL,CAAWU,cAAX,CAAlB,CAJ6C,CAK7C;;AACA,UAAIR,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,WAAW,GAAGH,UAAf,KAA8B,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAA/C,CAAX,CAAX,CAN6C,CAO7C;;AACA,UAAIO,eAAe,GAAGhB,WAAW,CAACiB,IAAZ,CAAiB,EAAjB,CAAtB;;AACA,UAAIC,MAAM,CAACC,SAAP,CAAiBN,IAAjB,CAAJ,EAA4B;AAC1BjB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCI,SAAjC,GACE,CAACY,IAAI,GAAG,CAAR,IAAaG,eADf;AAEApB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCS,KAAvC,GACE,CAACO,IAAI,GAAG,CAAR,IAAaG,eADf;AAED,OALD,MAKO;AACLpB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCI,SAAjC,GAA6Ce,eAA7C;AACApB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCS,KAAvC,GAA+CU,eAA/C;AACD,OAjB4C,CAkB7C;;AACD,KAnBD;AAoBD;AACF,CArDD;;AAuDA,SAAStB,aAAT","sourcesContent":["const initDate_calc = () => {\n  const date_present = document.getElementById(\"start_date\");\n\n  if (date_present) {\n    const dates_start = document.getElementById(\"start_date\");\n    const dates_end = document.getElementById(\"end_date\");\n    // Gets and sets the dates in a variable\n    const price_regex = document\n      .getElementById(\"day_price\")\n      .innerText.match(/\\d+/g);\n    // Gets the inner text of day_price and matches to get an array of the dress price\n\n    dates_start.addEventListener(\"input\", (event) => {\n      let end_d_value = document.getElementById(\"end_date\").value;\n      let start_date_value = event.target.value;\n      let mili_first = Date.parse(start_date_value);\n      let mili_second = Date.parse(end_d_value);\n      // conversion to Date and milliseconds\n      let days = Math.round((mili_second - mili_first) / (1000 * 60 * 60 * 24));\n      // difference_ms = mili_second - mili_first / one_day=1000*60*60*24\n      let new_price_regex = price_regex.join(\"\");\n      if (Number.isInteger(days)) {\n        document.getElementById(\"price\").innerText =\n          (days + 1) * new_price_regex;\n        document.getElementById(\"total_price\").value =\n          (days + 1) * new_price_regex;\n      } else {\n        document.getElementById(\"price\").innerText = new_price_regex;\n        document.getElementById(\"total_price\").value = new_price_regex;\n      }\n      // If only one date(ex. start date only) was selected or the same day, it would return and show NaN(Not-A-Number)\n    });\n    dates_end.addEventListener(\"input\", (event) => {\n      let start_d_value = document.getElementById(\"start_date\").value;\n      let end_date_value = event.target.value;\n      let mili_first = Date.parse(start_d_value);\n      let mili_second = Date.parse(end_date_value);\n      // conversion to Date and milliseconds\n      let days = Math.round((mili_second - mili_first) / (1000 * 60 * 60 * 24));\n      // difference_ms = mili_second - mili_first / one_day=1000*60*60*24\n      let new_price_regex = price_regex.join(\"\");\n      if (Number.isInteger(days)) {\n        document.getElementById(\"price\").innerText =\n          (days + 1) * new_price_regex;\n        document.getElementById(\"total_price\").value =\n          (days + 1) * new_price_regex;\n      } else {\n        document.getElementById(\"price\").innerText = new_price_regex;\n        document.getElementById(\"total_price\").value = new_price_regex;\n      }\n      // If only one date(ex. start date only) was selected or the same day, it would return and show NaN(Not-A-Number)\n    });\n  }\n};\n\nexport { initDate_calc };\n"]},"metadata":{},"sourceType":"module"}